@model PowerNew.Common.PagerResult<PowerNew.Model.bjf_loginlog>
@{
    ViewBag.Title = "日志记录";
    var index = Model.Index;
}
<div class="" style="width: 100%; margin: 0 auto">
    <div class="form-group">
        <div><h3 class="col-sm-2" style="margin-top: 5px;"><i class="glyphicon glyphicon-tag"></i>@ViewBag.Title </h3></div>

        <hr>
    </div>
    <table id="exampleTable"></table>
    @*<table id="table-area" class="table table-striped table-bordered table-hover">
                <tr>
                    <th>序号</th>
                    <th>ip地址</th>
                    <th>用户id</th>
                    <th>登录时间</th>
                </tr>
                @foreach (PowerNew.Model.bjf_loginlog item in Model.DataList)
                {
                    index++;
                    <tr>
                        <td>@index</td>
                        <td>@item.ip</td>
                        <td>@item.userid</td>
                        <td>@item.logintime</td>
                    </tr>
                }
            </table>
        <div class="form-group" style="width: 60%; float: right">
                <div class="col-sm-8" style="text-align:right">@Html.Raw(Model.PagerHtml())</div>
                <span class="col-sm-2" style="line-height: 81.5px">共 @Model.Total 条</span>
            </div>*@
</div>
<link href="~/Content/bootstrap-table/bootstrap-table.css" rel="stylesheet" />
<script src="~/Content/bootstrap-table/bootstrap-table.js"></script>
<script src="~/Content/bootstrap-table/bootstrap-table-zh-CN.js"></script>

<script type="text/javascript">
    $(function () {
        //1.初始化Table
        var oTable = new showtable();
        oTable.Init();
    });


    var showtable = function () {
        var obj = new Object();
        obj.Init = function () {
            $('#exampleTable').bootstrapTable(
                {
                    method: 'get',
                    url: "@Url.Action("GetTable")",
                    iconSize: 'outline',
                    toolbar: '#toolbar',
                    striped: true,
                    dataType: "json",
                    search: true,
                    showToggle: true,
                    showRefresh: true,
                    showColumns: true,
                    idField: "id",
                    pagination: true,
                    singleSelect: false,
                    pageSize: 10,
                    pageList: [10, 25, 50, 100],
                    pageNumber: 1,
                    sortable: true,
                    sidePagination: "server",
                    queryParams: obj.queryParams,
                    onLoadSuccess: function (data) {
                        console.log("加载成功");
                    },
                    //加载失败时执行
                    onLoadError: function (status) {
                        console.log("加载数据失败" + status);
                    },
                    columns: [
                        {
                            field: 'Index',
                            title: '序号',
                            formatter: function (value, row, index) {
                                return index + 1;
                            },
                            sortable: true
                        },
                        {
                            field: 'ip',
                            title: 'IP',
                            sortable: true
                        },
                        {
                            field: 'userid',
                            title: '用户id',
                            sortable: true
                        },
                        {
                            field: 'logintime',
                            title: '登录时间',
                            formatter: function (value, row, index) {
                                return changeDateFormat(value);
                            },
                            sortable: true
                        },
                    {
                        field: 'updatetime',
                        title: '最后更新时间',
                        formatter: function (value, row, index) {
                            return changeDateFormat(value);
                        }
                    }]
                });
        };

        obj.queryParams = function (params) {
            var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的

                PageSize: this.pageSize,
                PageIndex: this.pageNumber

                //其他搜索参数
                //departmentname: $("#txt_search_departmentname").val(),
                //statu: $("#txt_search_statu").val()
            };
            return temp;
        };
        return obj;
    }




    function changeDateFormat(cellval) {
        var dateVal = cellval + "";
        if (cellval != null) {
            var date = new Date(parseInt(dateVal.replace("/Date(", "").replace(")/", ""), 10));
            var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
            var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();

            var hours = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
            var minutes = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
            var seconds = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();

            return date.getFullYear() + "-" + month + "-" + currentDate + " " + hours + ":" + minutes + ":" + seconds;
        }
    }

</script>
