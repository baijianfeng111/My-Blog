//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsAsync.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClassInfo", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class ClassInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int customeridField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string loginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int openstateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int phonestateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int useridField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int customerid {
            get {
                return this.customeridField;
            }
            set {
                if ((this.customeridField.Equals(value) != true)) {
                    this.customeridField = value;
                    this.RaisePropertyChanged("customerid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string login {
            get {
                return this.loginField;
            }
            set {
                if ((object.ReferenceEquals(this.loginField, value) != true)) {
                    this.loginField = value;
                    this.RaisePropertyChanged("login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int openstate {
            get {
                return this.openstateField;
            }
            set {
                if ((this.openstateField.Equals(value) != true)) {
                    this.openstateField = value;
                    this.RaisePropertyChanged("openstate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int phonestate {
            get {
                return this.phonestateField;
            }
            set {
                if ((this.phonestateField.Equals(value) != true)) {
                    this.phonestateField = value;
                    this.RaisePropertyChanged("phonestate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userid {
            get {
                return this.useridField;
            }
            set {
                if ((this.useridField.Equals(value) != true)) {
                    this.useridField = value;
                    this.RaisePropertyChanged("userid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        WindowsAsync.ServiceReference1.CompositeType GetDataUsingDataContract(WindowsAsync.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WindowsAsync.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(WindowsAsync.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetRedisKey", ReplyAction="http://tempuri.org/IService1/SetRedisKeyResponse")]
        bool SetRedisKey(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetRedisKey", ReplyAction="http://tempuri.org/IService1/SetRedisKeyResponse")]
        System.Threading.Tasks.Task<bool> SetRedisKeyAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDb", ReplyAction="http://tempuri.org/IService1/GetDbResponse")]
        string GetDb();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDb", ReplyAction="http://tempuri.org/IService1/GetDbResponse")]
        System.Threading.Tasks.Task<string> GetDbAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetRedisKeyValue", ReplyAction="http://tempuri.org/IService1/SetRedisKeyValueResponse")]
        bool SetRedisKeyValue(string key, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetRedisKeyValue", ReplyAction="http://tempuri.org/IService1/SetRedisKeyValueResponse")]
        System.Threading.Tasks.Task<bool> SetRedisKeyValueAsync(string key, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRedisKeyValue", ReplyAction="http://tempuri.org/IService1/GetRedisKeyValueResponse")]
        string GetRedisKeyValue(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRedisKeyValue", ReplyAction="http://tempuri.org/IService1/GetRedisKeyValueResponse")]
        System.Threading.Tasks.Task<string> GetRedisKeyValueAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetEntity", ReplyAction="http://tempuri.org/IService1/SetEntityResponse")]
        bool SetEntity(string key, WindowsAsync.ServiceReference1.ClassInfo obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetEntity", ReplyAction="http://tempuri.org/IService1/SetEntityResponse")]
        System.Threading.Tasks.Task<bool> SetEntityAsync(string key, WindowsAsync.ServiceReference1.ClassInfo obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEntity", ReplyAction="http://tempuri.org/IService1/GetEntityResponse")]
        WindowsAsync.ServiceReference1.ClassInfo GetEntity(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEntity", ReplyAction="http://tempuri.org/IService1/GetEntityResponse")]
        System.Threading.Tasks.Task<WindowsAsync.ServiceReference1.ClassInfo> GetEntityAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveKey", ReplyAction="http://tempuri.org/IService1/RemoveKeyResponse")]
        bool RemoveKey(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveKey", ReplyAction="http://tempuri.org/IService1/RemoveKeyResponse")]
        System.Threading.Tasks.Task<bool> RemoveKeyAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UploadRecord", ReplyAction="http://tempuri.org/IService1/UploadRecordResponse")]
        string UploadRecord(byte[] bytes, string filename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UploadRecord", ReplyAction="http://tempuri.org/IService1/UploadRecordResponse")]
        System.Threading.Tasks.Task<string> UploadRecordAsync(byte[] bytes, string filename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAddCallPhoneWav", ReplyAction="http://tempuri.org/IService1/GetAddCallPhoneWavResponse")]
        string GetAddCallPhoneWav(int customerid, int createid, string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAddCallPhoneWav", ReplyAction="http://tempuri.org/IService1/GetAddCallPhoneWavResponse")]
        System.Threading.Tasks.Task<string> GetAddCallPhoneWavAsync(int customerid, int createid, string url);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WindowsAsync.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WindowsAsync.ServiceReference1.IService1>, WindowsAsync.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WindowsAsync.ServiceReference1.CompositeType GetDataUsingDataContract(WindowsAsync.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WindowsAsync.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(WindowsAsync.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public bool SetRedisKey(string key) {
            return base.Channel.SetRedisKey(key);
        }
        
        public System.Threading.Tasks.Task<bool> SetRedisKeyAsync(string key) {
            return base.Channel.SetRedisKeyAsync(key);
        }
        
        public string GetDb() {
            return base.Channel.GetDb();
        }
        
        public System.Threading.Tasks.Task<string> GetDbAsync() {
            return base.Channel.GetDbAsync();
        }
        
        public bool SetRedisKeyValue(string key, string value) {
            return base.Channel.SetRedisKeyValue(key, value);
        }
        
        public System.Threading.Tasks.Task<bool> SetRedisKeyValueAsync(string key, string value) {
            return base.Channel.SetRedisKeyValueAsync(key, value);
        }
        
        public string GetRedisKeyValue(string key) {
            return base.Channel.GetRedisKeyValue(key);
        }
        
        public System.Threading.Tasks.Task<string> GetRedisKeyValueAsync(string key) {
            return base.Channel.GetRedisKeyValueAsync(key);
        }
        
        public bool SetEntity(string key, WindowsAsync.ServiceReference1.ClassInfo obj) {
            return base.Channel.SetEntity(key, obj);
        }
        
        public System.Threading.Tasks.Task<bool> SetEntityAsync(string key, WindowsAsync.ServiceReference1.ClassInfo obj) {
            return base.Channel.SetEntityAsync(key, obj);
        }
        
        public WindowsAsync.ServiceReference1.ClassInfo GetEntity(string key) {
            return base.Channel.GetEntity(key);
        }
        
        public System.Threading.Tasks.Task<WindowsAsync.ServiceReference1.ClassInfo> GetEntityAsync(string key) {
            return base.Channel.GetEntityAsync(key);
        }
        
        public bool RemoveKey(string key) {
            return base.Channel.RemoveKey(key);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveKeyAsync(string key) {
            return base.Channel.RemoveKeyAsync(key);
        }
        
        public string UploadRecord(byte[] bytes, string filename) {
            return base.Channel.UploadRecord(bytes, filename);
        }
        
        public System.Threading.Tasks.Task<string> UploadRecordAsync(byte[] bytes, string filename) {
            return base.Channel.UploadRecordAsync(bytes, filename);
        }
        
        public string GetAddCallPhoneWav(int customerid, int createid, string url) {
            return base.Channel.GetAddCallPhoneWav(customerid, createid, url);
        }
        
        public System.Threading.Tasks.Task<string> GetAddCallPhoneWavAsync(int customerid, int createid, string url) {
            return base.Channel.GetAddCallPhoneWavAsync(customerid, createid, url);
        }
    }
}
